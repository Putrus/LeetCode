#include "../../../Problems/solution/include/Solution.h"

#include "CppUnitTest.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

namespace Problems
{
	namespace Test
	{
		namespace Hard
		{
			TEST_CLASS(SolveSudoku)
			{
			public:
				Solution solution;

				TEST_METHOD(Example1)
				{
					std::vector<std::vector<char>> board = {
						{ '5', '3', '.', '.', '7', '.', '.', '.', '.' },
						{ '6', '.', '.', '1', '9', '5', '.', '.', '.' },
						{ '.', '9', '8', '.', '.', '.', '.', '6', '.' },
						{ '8', '.', '.', '.', '6', '.', '.', '.', '3' },
						{ '4', '.', '.', '8', '.', '3', '.', '.', '1' },
						{ '7', '.', '.', '.', '2', '.', '.', '.', '6' },
						{ '.', '6', '.', '.', '.', '.', '2', '8', '.' },
						{ '.', '.', '.', '4', '1', '9', '.', '.', '5' },
						{ '.', '.', '.', '.', '8', '.', '.', '7', '9' } };

					solution.solveSudoku(board);

					std::vector<std::vector<char>> expected = {
						{ '5', '3', '4', '6', '7', '8', '9', '1', '2' },
						{ '6', '7', '2', '1', '9', '5', '3', '4', '8' },
						{ '1', '9', '8', '3', '4', '2', '5', '6', '7' },
						{ '8', '5', '9', '7', '6', '1', '4', '2', '3' },
						{ '4', '2', '6', '8', '5', '3', '7', '9', '1' },
						{ '7', '1', '3', '9', '2', '4', '8', '5', '6' },
						{ '9', '6', '1', '5', '3', '7', '2', '8', '4' },
						{ '2', '8', '7', '4', '1', '9', '6', '3', '5' },
						{ '3', '4', '5', '2', '8', '6', '1', '7', '9' } };

					Assert::IsTrue(expected == board);
				}
			};
		}
	}
}